// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacunassistBackend.Data;

#nullable disable

namespace VacunnasistBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VacunassistBackend.Entities.AppliedVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppliedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VaccineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VaccineId");

                    b.ToTable("AppliedVaccines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppliedDate = new DateTime(2022, 3, 12, 10, 30, 1, 0, DateTimeKind.Unspecified),
                            UserId = 3,
                            VaccineId = 1
                        },
                        new
                        {
                            Id = 2,
                            AppliedDate = new DateTime(2022, 5, 10, 14, 30, 25, 0, DateTimeKind.Unspecified),
                            UserId = 3,
                            VaccineId = 2
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Calle 52 113, La Plata",
                            IsActive = true,
                            Name = "La Plata I"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Falsa 100, La Plata",
                            IsActive = true,
                            Name = "Quilmes"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Calle 14 1140, La Plata",
                            IsActive = true,
                            Name = "La Plata II"
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("BelongsToRiskGroup")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PreferedOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PreferedOfficeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Calle Falsa 1234, La Plata",
                            BelongsToRiskGroup = false,
                            BirthDate = new DateTime(2022, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "11111111",
                            Email = "admin@vacunassist.com",
                            FullName = "Administrador",
                            Gender = "other",
                            IsActive = true,
                            PasswordHash = "1000:fxnBCT4gusUH54XSfv3/NexrxIF8frzN:brFsz3fRJViwv5aLDbh6upbNCfHlsCPV",
                            PhoneNumber = "2215897845",
                            Role = "administrator",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Calle Falsa 4567, La Plata",
                            BelongsToRiskGroup = false,
                            BirthDate = new DateTime(2022, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "11111111",
                            Email = "vacunador@email.com",
                            FullName = "Vacunador",
                            Gender = "other",
                            IsActive = true,
                            PasswordHash = "1000:XcLxetun5RHIfkTJLEn/+ukSZi/0dMF9:29mLYRpMyema9o/z16Tb28mVRq5hcyEP",
                            PhoneNumber = "1158987895",
                            Role = "vacunator",
                            UserName = "Vacunador"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Calle Falsa 789, La Plata",
                            BelongsToRiskGroup = false,
                            BirthDate = new DateTime(2022, 5, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            DNI = "12548987",
                            Email = "email@email.com",
                            FullName = "Paciente",
                            Gender = "other",
                            IsActive = true,
                            PasswordHash = "1000:89VpTrIcIWKNaENr5jPQkTBGEa3TUMhQ:y24Q2sxGKxvDBZ5pDdbz2STQwWc1IePs",
                            PhoneNumber = "11-8795-1478",
                            PreferedOfficeId = 1,
                            Role = "patient",
                            UserName = "Paciente"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Calle Falsa 111, La Plata",
                            BelongsToRiskGroup = false,
                            BirthDate = new DateTime(1987, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DNI = "33170336",
                            Email = "email2@email.com",
                            FullName = "Juan Perez",
                            Gender = "male",
                            IsActive = true,
                            PasswordHash = "1000:Eei2M4H+T2HL6gQMSwHVQ/3p3yh/v8jn:yasNAYQZWQ211mEf+JfumShxh0dTl3j5",
                            PhoneNumber = "211-235-1478",
                            PreferedOfficeId = 2,
                            Role = "patient",
                            UserName = "jperez"
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Vaccines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "COVID-19"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Fiebre amarilla"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Gripe"
                        });
                });

            modelBuilder.Entity("VacunassistBackend.Entities.AppliedVaccine", b =>
                {
                    b.HasOne("VacunassistBackend.Entities.User", "User")
                        .WithMany("Vaccines")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacunassistBackend.Entities.Vaccine", "Vaccine")
                        .WithMany("Users")
                        .HasForeignKey("VaccineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.User", b =>
                {
                    b.HasOne("VacunassistBackend.Entities.Office", "PreferedOffice")
                        .WithMany()
                        .HasForeignKey("PreferedOfficeId");

                    b.Navigation("PreferedOffice");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.User", b =>
                {
                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("VacunassistBackend.Entities.Vaccine", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
